//jar {
//    baseName = 'demo'
//    version = '0.0.1-SNAPSHOT'
//}

plugins {
//    id 'groovy'
//    id 'eclipse'
//    id 'idea'
    //id 'maven'
//    id 'project-report'
//    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id 'java'
    id "org.springframework.boot" version "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.1.3'
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.aliyun.openservices:ons-client:1.8.8.8.Final'
    //implementation 'com.aliyun.openservices:ons-client:2.0.6.Final'
    implementation 'commons-io:commons-io:2.14.0'
    implementation 'com.alibaba.fastjson2:fastjson2:2.0.41'

//    implementation('org.springframework.boot:spring-boot-starter-web')
//    implementation('org.springframework.boot:spring-boot-starter-cache')
////    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
//    implementation("org.springframework.boot:spring-boot-devtools")
//    implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-xml')
//    implementation('org.apache.httpcomponents:httpclient')
//    //compile('org.ehcache:ehcache')
////    implementation('javax.cache:cache-api')
////    implementation('org.infinispan:infinispan-jcache')
////    implementation('org.infinispan:infinispan-spring-boot-starter-embedded')
////    implementation('org.infinispan:infinispan-spring-boot-starter')
////    implementation('org.infinispan:infinispan-spring4-embedded')
////    implementation('io.micrometer:micrometer-registry-prometheus')
//
//
//
//    testImplementation('com.aliyun:aliyun-java-sdk-core')
//    testImplementation('com.aliyun:aliyun-java-sdk-green')
//    testImplementation('com.aliyun.oss:aliyun-sdk-oss')
//    testImplementation('com.alibaba:fastjson')
//
//    implementation 'com.aliyun.openservices:ons-client:1.8.4.Final'
//
//    testImplementation('org.springframework.boot:spring-boot-starter-test')
//    testImplementation('org.mockito:mockito-core')
//    implementation("org.springframework.boot:spring-boot-starter-logging")
//
//    implementation('org.springframework.boot:spring-boot-actuator')
}


tasks.named('test') {
    useJUnitPlatform()
}

//test {
//    include 'me/test/**'
//    testLogging.showStandardStreams = false
//    // listen to events in the test execution lifecycle
////    beforeTest { descriptor ->
////        logger.lifecycle("Running test: " + descriptor)
////    }
////
////    // listen to standard out and standard error of the test JVM(s)
////    onOutput { descriptor, event ->
////        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
////    }
//}

