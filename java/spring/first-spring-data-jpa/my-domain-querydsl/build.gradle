//jar {
//    baseName = 'demo'
//    version = '0.0.1-SNAPSHOT'
//}




//buildscript {
//    ext {
//        //springBootVersion = '1.5.2.RELEASE'
//    }
//    repositories {
//        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
//        mavenCentral()
//    }
//    dependencies {
////        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
////        classpath("io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE")
////        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17")
//        classpath("org.jooq:jooq-meta-extensions:3.11.9")
//        classpath("org.jooq:jooq-codegen:3.11.9")
//        classpath("org.jooq:jooq-meta:3.11.9")
//        classpath("org.jooq:jooq:3.11.9")
////        classpath("org.hibernate:hibernate-core:5.2.14.Final")
//        //jooqRuntime("org.hibernate:hibernate-core")
//    }
//}

plugins {
    id 'io.franzbecker.gradle-lombok' version '1.11'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
     id "org.springframework.boot" //version "2.0.0.RELEASE"
    // https://github.com/etiennestuder/gradle-jooq-plugin
//    id 'nu.studer.jooq'  version '3.0.2'
}
//apply plugin: 'org.springframework.boot'
apply plugin: "java"
//apply plugin: 'nu.studer.jooq'

jar {
    enabled = true
}
bootJar {
    enabled = false
    //classifier = 'boot'
}


sourceSets {
//    generated {
//        java {
//            //srcDirs = ['src/main/generated']
//        }
//    }
    querydsl

    main {
        // Fixes problem with JPA EntityManager factory requiring classes and persistence.xml in same path
        //output.resourcesDir = output.classesDir
        java {
            srcDirs = [
                    'src/main/java',
                    'src/querydsl/java'
            ]
        }
    }
}

//
//configurations {
////    springAgent
////    querydslapt
////    querydslapt
//}

//buildscript {
////    repositories {
////        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
////        mavenCentral()
////    }
//    dependencies {
//        //classpath("com.github.btpka3:my-querydsl-plugin")
//    }
//
//}
////apply plugin: 'com.github.btpka3.gradle.plugins.querydsl'

dependencies {
    compile project(":my-domain")
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('com.querydsl:querydsl-jpa')
    //compile('com.querydsl:querydsl-apt')
    compile('com.querydsl:querydsl-core')
    compile('com.querydsl:querydsl-collections')
    compile('joda-time:joda-time')

    //querydslapt('com.querydsl:querydsl-apt')
    //compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.h2database:h2')
    testCompile('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-logging')
    testCompile('org.assertj:assertj-core')


}

querydsl {
    //springDataMongo = true
    //library = 'com.querydsl:querydsl-apt:4.1.4'
    jpa = true
    //library = 'com.querydsl:querydsl-apt'
    //querydslSourcesDir = 'src/querydsl/java'
    //aptOptions = ['querydsl.entityAccessors=true','querydsl.useFields=false']
}


idea {
    module {
        sourceDirs += file('src/querydsl/java')
        generatedSourceDirs += file('src/querydsl/java')
    }
}

test {
    include 'me/test/**'
    testLogging.showStandardStreams = false
}

