//jar {
//    baseName = 'demo'
//    version = '0.0.1-SNAPSHOT'
//}




//buildscript {
//    ext {
//        //springBootVersion = '1.5.2.RELEASE'
//    }
//    repositories {
//        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
//        mavenCentral()
//    }
//    dependencies {
////        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
////        classpath("io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE")
////        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17")
//        classpath("org.jooq:jooq-meta-extensions:3.11.9")
//        classpath("org.jooq:jooq-codegen:3.11.9")
//        classpath("org.jooq:jooq-meta:3.11.9")
//        classpath("org.jooq:jooq:3.11.9")
////        classpath("org.hibernate:hibernate-core:5.2.14.Final")
//        //jooqRuntime("org.hibernate:hibernate-core")
//    }
//}

plugins {
    id 'io.franzbecker.gradle-lombok' version '1.11'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.9"
//    id "org.springframework.boot" version "${springBootVersion}"
    id "org.springframework.boot" //version "2.0.0.RELEASE"
    // https://github.com/etiennestuder/gradle-jooq-plugin
    id 'nu.studer.jooq'  version '3.0.2'
}
//apply plugin: 'org.springframework.boot'
apply plugin: "java"
//apply plugin: 'nu.studer.jooq'

jar {
    enabled = true
}
bootJar {
    enabled = false
    //classifier = 'boot'
}
//test {
//    include 'me/test/**'
//    testLogging.showStandardStreams = false
//}

// https://docs.spring.io/spring-boot/docs/current/reference/html/build-tool-plugins-gradle-plugin.html#build-tool-plugins-gradle-repackage-configuration
//bootRepackage {
//    enabled = false
//}


sourceSets {
//    generated {
//        java {
//            //srcDirs = ['src/main/generated']
//        }
//    }
    querydsl

    main {
        // Fixes problem with JPA EntityManager factory requiring classes and persistence.xml in same path
        //output.resourcesDir = output.classesDir
        java {
            srcDirs = [
                    'src/main/java',
                    'src/querydsl/java'
            ]
        }
    }
}

//
//configurations {
////    springAgent
////    querydslapt
////    querydslapt
//}

//buildscript {
////    repositories {
////        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
////        mavenCentral()
////    }
//    dependencies {
//        //classpath("com.github.btpka3:my-querydsl-plugin")
//    }
//
//}
////apply plugin: 'com.github.btpka3.gradle.plugins.querydsl'

dependencies {
    compile project(":my-domain")
    //compile project(":data-core")
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('com.querydsl:querydsl-jpa')
    //compile('com.querydsl:querydsl-apt')
    compile('com.querydsl:querydsl-core')
    compile('com.querydsl:querydsl-collections')
    compile('joda-time:joda-time')
    compile 'org.jooq:jooq'

    jooqRuntime project(":my-domain")
    jooqRuntime 'org.jooq:jooq'
    jooqRuntime'org.jooq:jooq-meta'
    jooqRuntime 'org.jooq:jooq-codegen'
    jooqRuntime 'org.jooq:jooq-meta-extensions'
    //jooqRuntime 'org.jooq:jooq-meta-extensions:3.11.9'
    jooqRuntime 'com.h2database:h2'

    // 注意：这里明确使用 hibernate-core 5.2, 而非 5.3 版本
    // org.jooq:jooq-meta-extensions 中
    // org.jooq.meta.extensions.jpa.AttributeConverterExtractor
    jooqRuntime("org.hibernate:hibernate-core:5.2.14.Final")
    compile 'com.h2database:h2'
//    jooqRuntime 'org.slf4j:jcl-over-slf4j'
//    jooqRuntime 'org.slf4j:slf4j-simple'
    //jooqRuntime("commons-logging:commons-logging:1.2")
   

    //querydslapt('com.querydsl:querydsl-apt')
    //compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.h2database:h2')
    testCompile('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-logging')
    testCompile('org.assertj:assertj-core')

}
jooq {

    sample(sourceSets.main) {
//        jdbc {
//            driver = 'org.h2.Driver'
//            url = 'jdbc:h2:~/test;AUTO_SERVER=TRUE'
//            user = 'sa'
//            password = ''
//            properties {
//                property {
//                    key = 'ssl'
//                    value = 'false'
//                }
//            }
//        }
        generator {
            name = 'org.jooq.codegen.JavaGenerator'

            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.meta.extensions.jpa.JPADatabase'
                properties {
                    property {
                        key = "packages"
                        value= "com.github.btpka3.first.spring.data.jpa.domain"
                    }
                    property {
                        key = "use-attribute-converters"
                        value= "true"
                    }
                }
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
            }
            target {
                packageName = 'com.github.btpka3.first.spring.data.jpa.jooq'
            }
        }

    }
}
lombok { // optional: values below are the defaults
    version = "1.16.20"
    sha256 = "c5178b18caaa1a15e17b99ba5e4023d2de2ebc18b58cde0f5a04ca4b31c10e6d"
}

querydsl {
    //springDataMongo = true
    //library = 'com.querydsl:querydsl-apt:4.1.4'
    jpa = true
    library = 'com.querydsl:querydsl-apt'
    //querydslSourcesDir = 'src/querydsl/java'
}

//println "---- zll 1_1: "+project.extensions.querydsl.querydslSourcesDir
//println "---- zll 1_2: "+project.extensions.querydsl

idea {
    module {
        sourceDirs += file('src/querydsl/java')
        generatedSourceDirs += file('src/querydsl/java')
    }
}

test {
    include 'me/test/**'
    testLogging.showStandardStreams = false
}

// ------------------ bak

//task generateQueryDSL(type: GroovyCompile, group: 'build', description: 'Generates the QueryDSL query types') {
//
//    source = sourceSets.main.groovy
//    classpath = configurations.compile + configurations.querydslapt
//
//    groovyOptions.javaAnnotationProcessing = true
//    options.compilerArgs << "-proc:only"
//    options.compilerArgs << "-processor" << "org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor"
//
//    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
//}
//
//compileJava {
//    dependsOn generateQueryDSL
//    source generateQueryDSL.destinationDir
//}
//
//compileGeneratedJava {
//    dependsOn generateQueryDSL
//    options.warnings = false
//    classpath += sourceSets.main.runtimeClasspath
//}
//clean {
//    delete sourceSets.generated.java.srcDirs
//}

//project.tasks.compileJava.dependsOn project.tasks.compileQuerydsl
//compileGroovy {
//    dependsOn compileQueryDsl
//}
