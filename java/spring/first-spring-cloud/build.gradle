plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.11'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}
group = 'com.github.btpka3'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
    set('springCloudVersion', "2021.0.6")
}

repositories {
    mavenCentral()
}

dependencies {
    // spring boot
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // spring-cloud

    implementation 'org.springframework.cloud:spring-cloud-starter-bus-kafka'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
//    implementation 'org.springframework.cloud:spring-cloud-starter-zookeeper-config'
//    implementation 'org.springframework.cloud:spring-cloud-starter-zookeeper-discovery'

    // consul ：服务发现+配置管理
    implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
//    implementation 'org.springframework.cloud:spring-cloud-stream-reactive'
    implementation 'org.springframework.cloud:spring-cloud-stream'
//    implementation 'org.springframework.cloud:spring-cloud-stream-binders'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'
    // https://github.com/spring-cloud/spring-cloud-stream-binder-aws-kinesis
//    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kinesis'
//    implementation 'org.springframework.cloud:spring-cloud-stream-binder-servlet'
//
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    //implementation 'org.springframework.cloud:spring-cloud-starter-feign'
    // https://www.baeldung.com/spring-boot-opentelemetry-setup
    // 应该排除掉： org.springframework.cloud:spring-cloud-sleuth-brave
    // 替换为: org.springframework.cloud:spring-cloud-sleuth-otel-autoconfigure 使用 OpenTelemetry
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
//    implementation 'org.springframework.cloud:spring-cloud-sleuth-otel-autoconfigure'
//    implementation 'io.opentelemetry:opentelemetry-exporter-otlp' // 1.23.1
//
    implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-discoveryclient'
    implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-loadbalancer'
    implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-all'

    // spring-cloud-alibaba
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel'
    //implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-seata'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-sidecar'
//    implementation 'com.alibaba.cloud:spring-cloud-starter-alicloud-schedulerX'
    implementation 'com.alibaba.cloud:spring-cloud-starter-stream-rocketmq'
    //implementation 'com.alibaba.cloud:spring-cloud-stream-binder-rocketmq'

    implementation 'org.apache.rocketmq:rocketmq-spring-boot-starter:2.2.3'
    implementation 'org.apache.rocketmq:rocketmq-client-java:5.0.5'

    // aliyun-spring-boot
    implementation 'com.alibaba.cloud:aliyun-oss-spring-boot-starter'
    implementation 'com.alibaba.cloud:aliyun-sms-spring-boot-starter'
    implementation 'com.alibaba.cloud:aliyun-schedulerx-spring-boot-starter'
    implementation 'com.alibaba.cloud:aliyun-redis-spring-boot-starter'
    implementation 'com.alibaba.cloud:aliyun-rds-spring-boot-starter'

    // nacos
    //implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    //implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery '
    implementation 'com.alibaba.nacos:nacos-spring-context:1.1.1'
    implementation 'com.alibaba.boot:nacos-config-spring-boot-starter:0.2.12'
    implementation 'com.alibaba.boot:nacos-discovery-spring-boot-starter:0.2.12'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/registry/nacos/
    implementation 'org.apache.dubbo:dubbo-spring-boot-starter:2.7.8'
    //implementation 'com.alibaba.nacos:nacos-client:2.1.0'
//
//    implementation 'org.apache.dubbo:dubbo-dependencies-zookeeper-curator5:3.2.0'

//    implementation 'com.alibaba.cloud:aliyun-fc-spring-boot-starter'

//
//
//
//
//
//
//
//    implementation 'org.apache.kafka:kafka-streams'
//
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.boot:spring-cloud-stream-test-support'
//    testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
//    testImplementation("org.springframework.cloud:spring-cloud-stream") {
//        artifact {
//            name = "spring-cloud-stream"
//            extension = "jar"
//            type ="test-jar"
//            classifier = "test-binder"
//        }
//    }

}

tasks.named('test') {
    useJUnitPlatform()
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:2022.0.0.0-RC2"
        mavenBom "com.alibaba.cloud:aliyun-spring-boot-dependencies:1.0.0"
        //mavenBom "org.springframework.cloud:spring-cloud-stream"
//        mavenBom "org.apache.dubbo:dubbo-bom:3.2.0"
//        mavenBom "org.apache.dubbo:dubbo-dependencies-bom:3.2.0"
    }
}


//
//
//buildscript {
//    ext {
//        //springBootVersion = '1.5.2.RELEASE'
//    }
//    repositories {
//        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
//        mavenCentral()
//    }
//    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//        classpath("io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE")
//        //classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17")
//    }
//}
//
////plugins{
////    id 'eclipse'
////    id 'idea'
////    id "io.spring.dependency-management" version "1.0.0.RELEASE" //1.0.2.RELEASE
////    id 'project-report'
////    id 'maven'
////    id 'org.springframework.boot' version '1.5.2.RELEASE'
////}
//
//
//allprojects {
//
//    apply plugin: 'eclipse'
//    apply plugin: 'idea'
//    apply plugin: "io.spring.dependency-management"
//    apply plugin: 'project-report'
//    apply plugin: 'maven'
//
//    repositories {
//        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
//        mavenCentral()
//    }
//
//    idea {
//        module {
//            downloadJavadoc = false
//            downloadSources = true
//        }
//    }
//
//    eclipse {
//        classpath {
//            downloadSources = true
//        }
//    }
//
//
//    dependencyManagement {
//        imports {
//            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
//            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//            mavenBom 'org.springframework.cloud:spring-cloud-zookeeper-dependencies:1.1.1.RELEASE'
//        }
//
//        dependencies {
////            dependency('org.codehaus.groovy:groovy-all:2.4.11')
////            dependency('com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.8.7')
////            dependency('org.apache.httpcomponents:httpclient:4.5.3')
////            dependency('org.apache.cxf:cxf-spring-boot-starter-jaxws:3.1.10')
////            dependency('org.apache.cxf:cxf-rt-frontend-jaxrs:3.1.10')
////            dependency('org.apache.cxf:cxf-rt-rs-service-description-swagger:3.1.10')
////            dependency('org.webjars:swagger-ui:2.2.10-1')
////            dependency('org.grails:gorm-mongodb-spring-boot:6.0.7.RELEASE')
////            dependency('org.grails.plugins:rx-mongodb:6.0.6.RELEASE')
////            dependency('org.grails:grails-datastore-gorm-rx-mongodb:6.0.7.RELEASE')
////            dependency('org.grails:grails-validation:3.1.11')
////            dependency('org.webjars:swagger-ui:2.2.10')
////            dependency('javax.ws.rs:jsr311-api:1.1.1')
////            dependency('javax.ws.rs:javax.ws.rs-api:2.0.1')
////            dependency('org.glassfish.jersey.ext:jersey-spring3:2.25.1')
////            dependency('io.swagger:swagger-core:1.5.10')                 // 1.5.12
////            dependency('io.swagger:swagger-jaxrs:1.5.12')
////            dependency('io.swagger:swagger-jersey2-jaxrs:1.5.12')
////            dependency('io.springfox:springfox-swagger2:2.6.1')
////            dependency('io.springfox:springfox-data-rest:2.6.1')
////            dependency('io.springfox:springfox-staticdocs:2.6.1')
////            dependency('io.springfox:springfox-swagger-ui:2.6.1')
////            dependency('org.webjars:sockjs-client:1.1.1')
////            dependency('org.webjars.bower:angular:1.6.0')
////            dependency('org.webjars.bower:angular-messages:1.6.0')
////            dependency('org.webjars.bower:angular-animate:1.6.0')
////            dependency('org.webjars.bower:angular-aria:1.6.0')
////            dependency('org.webjars:angular-material:1.1.1')
////            dependency('org.webjars.bower:angular-material-icons:0.7.1') {
////                exclude "org.webjars.bower:angular"
////            }
////
////            dependency('com.querydsl:querydsl-apt:4.1.4')
////            dependency('com.querydsl:querydsl-collections:4.1.4')
////            dependency('com.querydsl:querydsl-core:4.1.4')
////            dependency('com.querydsl:querydsl-jpa:4.1.4')
////            dependency('com.querydsl:querydsl-mongodb:4.1.4')
////            dependency('joda-time:joda-time:2.9.7')
////            dependency('org.apache.commons:commons-math3:3.6.1')
////            dependency('org.mongodb.morphia:morphia:1.3.2')
//        }
//    }
//
//    uploadArchives {
//        repositories {
//            mavenDeployer {
//                repository(url: "http://mvn.kingsilk.xyz/content/repositories/releases/") {
//                    authentication(userName: "admin", password: "admin123")
//                }
//                snapshotRepository(url: "http://mvn.kingsilk.xyz/content/repositories/snapshots/") {
//                    authentication(userName: "admin", password: "admin123")
//                }
//                //pom.version = "0.1.0-SNAPSHOT"
//                //pom.artifactId = "simple-project"
//                //pom.groupId = "com.example"
//            }
//        }
//    }
//}
//
//subprojects {
//
//    dependencies {
//
//    }
//
//
//}