/*
 * This file is generated by jOOQ.
 */
package com.github.btpka3.first.spring.jooq.domain.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Address implements Serializable {

    private static final long serialVersionUID = 1L;

    private Short         addressId;
    private String        address;
    private String        address2;
    private String        district;
    private Short         cityId;
    private String        postalCode;
    private String        phone;
    private Object        location;
    private LocalDateTime lastUpdate;

    public Address() {}

    public Address(Address value) {
        this.addressId = value.addressId;
        this.address = value.address;
        this.address2 = value.address2;
        this.district = value.district;
        this.cityId = value.cityId;
        this.postalCode = value.postalCode;
        this.phone = value.phone;
        this.location = value.location;
        this.lastUpdate = value.lastUpdate;
    }

    public Address(
        Short         addressId,
        String        address,
        String        address2,
        String        district,
        Short         cityId,
        String        postalCode,
        String        phone,
        Object        location,
        LocalDateTime lastUpdate
    ) {
        this.addressId = addressId;
        this.address = address;
        this.address2 = address2;
        this.district = district;
        this.cityId = cityId;
        this.postalCode = postalCode;
        this.phone = phone;
        this.location = location;
        this.lastUpdate = lastUpdate;
    }

    /**
     * Getter for <code>sakila.address.address_id</code>.
     */
    public Short getAddressId() {
        return this.addressId;
    }

    /**
     * Setter for <code>sakila.address.address_id</code>.
     */
    public Address setAddressId(Short addressId) {
        this.addressId = addressId;
        return this;
    }

    /**
     * Getter for <code>sakila.address.address</code>.
     */
    public String getAddress() {
        return this.address;
    }

    /**
     * Setter for <code>sakila.address.address</code>.
     */
    public Address setAddress(String address) {
        this.address = address;
        return this;
    }

    /**
     * Getter for <code>sakila.address.address2</code>.
     */
    public String getAddress2() {
        return this.address2;
    }

    /**
     * Setter for <code>sakila.address.address2</code>.
     */
    public Address setAddress2(String address2) {
        this.address2 = address2;
        return this;
    }

    /**
     * Getter for <code>sakila.address.district</code>.
     */
    public String getDistrict() {
        return this.district;
    }

    /**
     * Setter for <code>sakila.address.district</code>.
     */
    public Address setDistrict(String district) {
        this.district = district;
        return this;
    }

    /**
     * Getter for <code>sakila.address.city_id</code>.
     */
    public Short getCityId() {
        return this.cityId;
    }

    /**
     * Setter for <code>sakila.address.city_id</code>.
     */
    public Address setCityId(Short cityId) {
        this.cityId = cityId;
        return this;
    }

    /**
     * Getter for <code>sakila.address.postal_code</code>.
     */
    public String getPostalCode() {
        return this.postalCode;
    }

    /**
     * Setter for <code>sakila.address.postal_code</code>.
     */
    public Address setPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }

    /**
     * Getter for <code>sakila.address.phone</code>.
     */
    public String getPhone() {
        return this.phone;
    }

    /**
     * Setter for <code>sakila.address.phone</code>.
     */
    public Address setPhone(String phone) {
        this.phone = phone;
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getLocation() {
        return this.location;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Address setLocation(Object location) {
        this.location = location;
        return this;
    }

    /**
     * Getter for <code>sakila.address.last_update</code>.
     */
    public LocalDateTime getLastUpdate() {
        return this.lastUpdate;
    }

    /**
     * Setter for <code>sakila.address.last_update</code>.
     */
    public Address setLastUpdate(LocalDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Address (");

        sb.append(addressId);
        sb.append(", ").append(address);
        sb.append(", ").append(address2);
        sb.append(", ").append(district);
        sb.append(", ").append(cityId);
        sb.append(", ").append(postalCode);
        sb.append(", ").append(phone);
        sb.append(", ").append(location);
        sb.append(", ").append(lastUpdate);

        sb.append(")");
        return sb.toString();
    }
}
